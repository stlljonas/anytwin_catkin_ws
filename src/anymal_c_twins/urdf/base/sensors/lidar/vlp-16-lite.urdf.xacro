<?xml version="1.0"?>

<robot xmlns:xacro="http://www.ros.org/wiki/xacro">

  <!-- Velodyne sensor and cage; origin is the sensor frame -->
  <xacro:macro name="vlp-16-lite" params="name:=velodyne
                                          parent:=base
                                          topic:=/lidar/point_cloud
                                          hz:=10
                                          lasers:=16
                                          samples:=440
                                          collision_range:=0.3
                                          min_range:=0.9
                                          max_range:=130.0
                                          noise:=0.008
                                          min_angle:=-${pi}
                                          max_angle:=${pi}
                                          gpu:=false
                                          simulation:=^
                                          *origin">

    <!-- Velodyne Puck LITE sensor -->
    <xacro:property name="m_V"          value= "0.695"/> <!-- [kg] -->
    <xacro:property name="V_r_Vcom_x"   value="-0.012"/> <!-- [m] -->
    <xacro:property name="V_r_Vcom_y"   value= "0.001"/> <!-- [m] -->
    <xacro:property name="V_r_Vcom_z"   value="-0.008"/> <!-- [m] -->
    <xacro:property name="V_Ixx_V"      value= "0.000846765"/> <!-- [kg * m^2] -->
    <xacro:property name="V_Iyy_V"      value= "0.001367583"/> <!-- [kg * m^2] -->
    <xacro:property name="V_Izz_V"      value= "0.001363673"/> <!-- [kg * m^2] -->
    <xacro:property name="V_Ixy_V"      value= "0.000069565"/> <!-- [kg * m^2] -->
    <xacro:property name="V_Ixz_V"      value= "0.000271110"/> <!-- [kg * m^2] -->
    <xacro:property name="V_Iyz_V"      value= "0.000058984"/> <!-- [kg * m^2] -->

    <!-- Generated properties -->
    <xacro:property name="gpu_string"   value="${'gpu_' if gpu else ''}"/>


    <!-- parent to sensor joint -->
    <joint name="${parent}_to_${name}" type="fixed">
      <parent link="${parent}"/>
      <child link="${name}"/>
      <xacro:insert_block name="origin"/>
    </joint>

    <!-- Velodyne sensor link -->
    <link name="${name}">
      <inertial>
        <origin xyz="${V_r_Vcom_x} ${V_r_Vcom_y} ${V_r_Vcom_z}" rpy="0.0 0.0 0.0"/>
        <mass value="${m_V}"/>
        <inertia ixx="${V_Ixx_V}" ixy="${V_Ixy_V}" ixz="${V_Ixz_V}" iyy="${V_Iyy_V}" iyz="${V_Iyz_V}" izz="${V_Izz_V}"/>
      </inertial>
      <visual>
        <origin xyz="0 0 0" />
        <geometry>
          <mesh filename="package://anymal_c/urdf/base/sensors/lidar/velodyne_3_1_1_mesh.dae" />
        </geometry>
      </visual>
    </link>

    <xacro:if value="${simulation}">
      <!-- velodyne_gazebo_plugins -->
      <gazebo reference="${name}">
        <sensor type="${gpu_string}ray" name="${name}-VLP16">
          <pose>0 0 0 0 0 0</pose>
          <visualize>false</visualize>
          <update_rate>${hz}</update_rate>
          <ray>
            <scan>
              <horizontal>
                <samples>${samples}</samples>
                <resolution>1</resolution>
                <min_angle>${min_angle}</min_angle>
                <max_angle>${max_angle}</max_angle>
              </horizontal>
              <vertical>
                <samples>${lasers}</samples>
                <resolution>1</resolution>
                <min_angle>-${15.0*pi/180.0}</min_angle>
                <max_angle> ${15.0*pi/180.0}</max_angle>
              </vertical>
            </scan>
            <range>
              <min>${collision_range}</min>
              <max>${max_range+1}</max>
              <resolution>0.001</resolution>
            </range>
            <noise>
              <type>gaussian</type>
              <mean>0.0</mean>
              <stddev>0.0</stddev>
            </noise>
          </ray>
          <plugin name="gazebo_ros_laser_controller" filename="libgazebo_ros_velodyne_${gpu_string}laser.so">
            <topicName>${topic}</topicName>
            <frameName>${name}</frameName>
            <min_range>${min_range}</min_range>
            <max_range>${max_range}</max_range>
            <gaussianNoise>${noise}</gaussianNoise>
          </plugin>
        </sensor>
      </gazebo>
    </xacro:if> <!-- simulation -->

  </xacro:macro>

</robot>
