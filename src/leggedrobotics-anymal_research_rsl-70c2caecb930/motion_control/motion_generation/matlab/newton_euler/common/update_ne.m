function data = update_ne(data)

% Newton equation
data.I_mddr_IG = data.f_lf + ...
                 data.f_rf + ...
                 data.f_lh + ...
                 data.f_rh + ...
                 data.m*data.g_vec + ...
                 data.f_ext;
data.I_ddr_IG = data.I_mddr_IG/data.m;
data.weight = data.m*data.g_vec;
data.f_gi = -(data.f_lf + ...
              data.f_rf + ...
              data.f_lh + ...
              data.f_rh) - ...
              data.f_ext;
      
% Euler equations
data.ldot = cross(data.I_r_GF_lf, data.f_lf) + ...
            cross(data.I_r_GF_rf, data.f_rf) + ...
            cross(data.I_r_GF_lh, data.f_lh) + ...
            cross(data.I_r_GF_rh, data.f_rh) + ...
            cross(data.I_r_GF, data.f_ext);
data.I_dw_IG = data.inertia\(data.ldot - cross(data.I_w_IG, data.inertia*data.I_w_IG));
data.tau_gi_I = -(cross(data.I_r_IF_lf, data.f_lf) + ...
                  cross(data.I_r_IF_rf, data.f_rf) + ...
                  cross(data.I_r_IF_lh, data.f_lh) + ...
                  cross(data.I_r_IF_rh, data.f_rh)) ...
                - cross(data.I_r_IG + data.I_r_GF,data.f_ext);

% ZMP
data.I_r_IZ = cross(data.n,data.tau_gi_I)/(data.n.'*data.f_gi);
          
data.tau_gi_Z = -(cross(data.I_r_IF_lf - data.I_r_IZ, data.f_lf) + ...
                  cross(data.I_r_IF_rf - data.I_r_IZ, data.f_rf) + ...
                  cross(data.I_r_IF_lh - data.I_r_IZ, data.f_lh) + ...
                  cross(data.I_r_IF_rh - data.I_r_IZ, data.f_rh)) ...
              - cross(data.I_r_IG + data.I_r_GF - data.I_r_IZ,data.f_ext);

% todo: COP

end