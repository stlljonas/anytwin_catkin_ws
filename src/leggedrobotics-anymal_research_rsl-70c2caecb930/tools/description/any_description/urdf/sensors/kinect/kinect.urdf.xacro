<?xml version="1.0"?>

<!--Copyright (C) 2014 by Jerome Maye, Peter Fankhauser                      -->
<!--jerome.maye@gmail.com                                                    -->
<!--                                                                         -->
<!--This program is free software; you can redistribute it and/or modify     -->
<!--it under the terms of the Lesser GNU General Public License as published -->
<!--by the Free Software Foundation; either version 3 of the License, or     -->
<!--(at your option) any later version.                                      -->
<!--                                                                         -->
<!--This program is distributed in the hope that it will be useful,          -->
<!--but WITHOUT ANY WARRANTY; without even the implied warranty of           -->
<!--MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE. See the             -->
<!--Lesser GNU General Public License for more details.                      -->
<!--                                                                         -->
<!--You should have received a copy of the Lesser GNU General Public License -->
<!--along with this program. If not, see <http://www.gnu.org/licenses/>.     -->

<!-- This file contains the description of a Kinect camera. -->

<robot xmlns:xacro="http://www.ros.org/wiki/xacro">

  <!-- Parameters -->
  <xacro:property name="PI" value="3.1415926535897931"/>
  <xacro:property name="l_kinect" value="0.28"/> <!-- [m] -->
  <xacro:property name="w_kinect" value="0.7"/> <!-- [m] -->
  <xacro:property name="h_kinect" value="0.65"/> <!-- [m] -->
  <xacro:property name="m_kinect" value="0.5"/> <!-- [kg] -->
  <xacro:property name="mu_kinect" value="0.8"/>
  <xacro:property name="depth_y" value="-0.02"/> <!-- [m] -->
  <xacro:property name="rgb_y" value="-0.0125"/> <!-- [m] -->
  <xacro:property name="kinect_meshes_path"
    value="package://any_description/urdf/kinect"/>

  <!-- Kinect description -->
  <xacro:macro name="kinect_model" params="name parent *origin">
  
  	<xacro:if value="$(arg simulation)">
  	
      <link name="${name}_link">
        <visual>
          <origin xyz="0 0 0" rpy="0 0 0"/>
          <geometry>
            <mesh filename="${kinect_meshes_path}/kinect_simple.dae"/>
          </geometry>
        </visual>
        <collision>
          <origin xyz="0 0 0" rpy="0 0 0"/>
          <geometry>
            <mesh filename="${kinect_meshes_path}/kinect_simple.stl"/>
          </geometry>
        </collision>
        <xacro:inertial_cuboid m="${m_kinect}" w="${l_kinect}" h="${h_kinect}"
          d="${w_kinect}"/>
      </link>
   
      <link name="${name}_rgb_frame"/>
   
      <link name="${name}_rgb_optical_frame"/>
   
      <link name="${name}_depth_frame"/>
   
      <link name="${name}_depth_optical_frame"/>
   
      <joint name="${name}_joint" type="fixed">
        <parent link="${parent}"/>
        <child link="${name}_link"/>
        <xacro:insert_block name="origin"/>
      </joint>
   
      <joint name="${name}_depth_joint" type="fixed">
        <parent link="${name}_link"/>
        <child link="${name}_depth_frame"/>
        <origin xyz="0.0 ${depth_y} 0.0" rpy="0 0 0"/>
      </joint>
   
      <joint name="${name}_depth_optical_joint" type="fixed">
        <parent link="${name}_depth_frame" />
        <child link="${name}_depth_optical_frame"/>
        <origin xyz="0 0 0" rpy="${-PI / 2} 0.0 ${-PI / 2}"/>
      </joint>
   
      <joint name="${name}_rgb_joint" type="fixed">
        <parent link="${name}_link"/>
        <child link="${name}_rgb_frame"/>
        <origin xyz="0.0 ${rgb_y} 0.0" rpy="0 0 0"/>
      </joint>
   
      <joint name="${name}_rgb_optical_joint" type="fixed">
        <parent link="${name}_rgb_frame"/>
        <child link="${name}_rgb_optical_frame"/>
        <origin xyz="0 0 0" rpy="${-PI / 2} 0.0 ${-PI / 2}"/>
      </joint>
      
    </xacro:if>
  </xacro:macro>

  <!-- Kinect Gazebo -->
  <xacro:macro name="kinect" params="name parent *origin update_rate image_width
      image_height">
    <xacro:kinect_model name="${name}" parent="${parent}">
      <xacro:insert_block name="origin"/>
    </xacro:kinect_model>

	<xacro:if value="$(arg simulation)">
      <gazebo reference="${name}_link">
        <mu1>${mu_kinect}</mu1>
        <mu2>${mu_kinect}</mu2>
      </gazebo>

      <gazebo reference="${name}_depth_frame">
        <sensor name="${name}" type="depth">
          <update_rate>${update_rate}</update_rate>
          <camera>
            <horizontal_fov>1.04719755</horizontal_fov>
            <image>
              <format>R8G8B8</format>
              <width>${image_width}</width>
              <height>${image_height}</height>
            </image>
            <clip>
              <near>0.05</near>
              <far>3</far>
            </clip>
<!--          <noise>-->
<!--            <type>gaussian</type>-->
<!--            <mean>0</mean>-->
<!--            <stddev>0.01</stddev>-->
<!--          </noise>-->
        </camera>
        <plugin name="${name}_camera_controller"
            filename="libgazebo_ros_openni_kinect.so">
<!--          <robotNamespace></robotNamespace>-->
<!--          <cameraName></cameraName>-->
            <imageTopicName>${name}/rgb/image_raw</imageTopicName>
            <cameraInfoTopicName>${name}/rgb/camera_info</cameraInfoTopicName>
            <depthImageTopicName>${name}/depth/image_raw</depthImageTopicName>
            <depthImageCameraInfoTopicName>
              ${name}/depth/camera_info</depthImageCameraInfoTopicName>
            <pointCloudTopicName>${name}/depth/points</pointCloudTopicName>
            <pointCloudCutoff>0.3</pointCloudCutoff>
            <pointCloudCutoffMax>4</pointCloudCutoffMax>
            <frameName>${name}_depth_optical_frame</frameName>
            <CxPrime>0</CxPrime>
            <Cx>0</Cx>
            <Cy>0</Cy>
            <focalLength>0</focalLength>
            <hackBaseline>0</hackBaseline>
            <distortionK1>0</distortionK1>
            <distortionK2>0</distortionK2>
            <distortionK3>0</distortionK3>
            <distortionT1>0</distortionT1>
            <distortionT2>0</distortionT2>
          </plugin>
        </sensor>
      </gazebo>
    </xacro:if>
  </xacro:macro>

</robot>
