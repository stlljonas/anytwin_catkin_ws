<?xml version="1.0"?>

<!--Copyright (C) 2014 by Jerome Maye, Peter Fankhauser                      -->
<!--jerome.maye@gmail.com                                                    -->
<!--                                                                         -->
<!--This program is free software; you can redistribute it and/or modify     -->
<!--it under the terms of the Lesser GNU General Public License as published -->
<!--by the Free Software Foundation; either version 3 of the License, or     -->
<!--(at your option) any later version.                                      -->
<!--                                                                         -->
<!--This program is distributed in the hope that it will be useful,          -->
<!--but WITHOUT ANY WARRANTY; without even the implied warranty of           -->
<!--MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE. See the             -->
<!--Lesser GNU General Public License for more details.                      -->
<!--                                                                         -->
<!--You should have received a copy of the Lesser GNU General Public License -->
<!--along with this program. If not, see <http://www.gnu.org/licenses/>.     -->

<!-- This file contains the description of a Velodyne HDL-32E lidar. -->

<robot xmlns:xacro="http://www.ros.org/wiki/xacro">

  <!-- Parameters -->
  <xacro:property name="PI" value="3.1415926535897931"/>
  <xacro:property name="l_vdyne_plate" value="0.14"/> <!-- [m] -->
  <xacro:property name="w_vdyne_plate" value="0.2"/> <!-- [m] -->
  <xacro:property name="h_vdyne_plate" value="0.08"/> <!-- [m] -->
  <xacro:property name="m_vdyne_plate" value="0.1"/> <!-- [kg] -->
  <xacro:property name="r_vdyne" value="0.042672"/> <!-- [m] -->
  <xacro:property name="l_vdyne" value="0.144272"/> <!-- [m] -->
  <xacro:property name="frame_z_vdyne" value="0.090805"/> <!-- [m] -->
  <xacro:property name="m_vdyne" value="1"/> <!-- [kg] -->
  <xacro:property name="mu_vdyne" value="0.8"/>

  <!-- Lidar description -->
  <xacro:macro name="velodyne_hdl_32e_model" params="name parent *origin">
    <xacro:if value="$(arg simulation)">
      <link name="${name}_plate_link">
        <visual>
          <origin xyz="0 0 ${h_vdyne_plate * 0.5}" rpy="0 0 0"/>
          <geometry>
            <box size="${l_vdyne_plate} ${w_vdyne_plate} ${h_vdyne_plate}"/>
          </geometry>
          <material name="white"/>
        </visual>
        <collision>
          <origin xyz="0 0 ${h_vdyne_plate * 0.5}" rpy="0 0 0"/>
          <geometry>
            <box size="${l_vdyne_plate} ${w_vdyne_plate} ${h_vdyne_plate}"/>
          </geometry>
        </collision>
        <xacro:inertial_cuboid m="${m_vdyne_plate}" w="${l_vdyne_plate}"
          h="${h_vdyne_plate}" d="${w_vdyne_plate}"/>
      </link>
     
      <link name="${name}_link">
        <visual>
          <origin xyz="0 0 ${l_vdyne * 0.5}" rpy="0 0 0"/>
          <geometry>
            <cylinder radius="${r_vdyne}" length="${l_vdyne}"/>
          </geometry>
          <material name="light_grey"/>
        </visual>
        <collision>
          <origin xyz="0 0 ${l_vdyne * 0.5}" rpy="0 0 0"/>
          <geometry>
            <cylinder radius="${r_vdyne}" length="${l_vdyne}"/>
          </geometry>
        </collision>
        <xacro:inertial_cylinder m="${m_vdyne}" r="${r_vdyne}" h="${l_vdyne}"/>
      </link>
     
      <link name="${name}_frame"/>
     
      <joint name="${name}_plate_joint" type="fixed">
        <parent link="${parent}"/>
        <child link="${name}_plate_link"/>
        <xacro:insert_block name="origin"/>
      </joint>
     
      <joint name="${name}_joint" type="fixed">
        <parent link="${name}_plate_link"/>
        <child link="${name}_link"/>
        <origin xyz="0 0 ${h_vdyne_plate}"/>
        <axis xyz="0 0 1"/>
      </joint>
     
      <joint name="${name}_frame_joint" type="fixed">
        <parent link="${name}_link"/>
        <child link="${name}_frame"/>
        <origin xyz="0.0 0.0 ${frame_z_vdyne}" rpy="0 0 0"/>
      </joint>
    </xacro:if>
  </xacro:macro>

  <!-- Lidar Gazebo -->
  <xacro:macro name="velodyne_hdl_32e" params="name parent *origin">
    <xacro:velodyne_hdl_32e_model name="${name}" parent="${parent}">
      <xacro:insert_block name="origin"/>
    </xacro:velodyne_hdl_32e_model>

	<xacro:if value="$(arg simulation)">
      <gazebo reference="${name}_plate_link">
        <material>Gazebo/White</material>
        <mu1>${mu_vdyne}</mu1>
        <mu2>${mu_vdyne}</mu2>
      </gazebo>
  
      <gazebo reference="${name}_link">
        <material>Gazebo/Grey</material>
        <mu1>${mu_vdyne}</mu1>
        <mu2>${mu_vdyne}</mu2>
      </gazebo>
  
      <gazebo reference="${name}_frame">
        <sensor name="velodyne" type="gpu_ray">
          <update_rate>10</update_rate>
          <ray>
            <scan>
              <horizontal>
                <samples>2088</samples>
                <resolution>1</resolution>
                <min_angle>${-PI}</min_angle>
                <max_angle>${PI}</max_angle>
              </horizontal>
              <vertical>
                <samples>32</samples>
                <resolution>1</resolution>
                <min_angle>-0.535292482</min_angle>
                <max_angle>0.186226631</max_angle>
              </vertical>
            </scan>
            <range>
              <min>0.05</min>
              <max>100</max>
              <resolution>0.02</resolution>
            </range>
          </ray>
          <plugin name="laser_controller" filename="libgazebo_ros_3dlidar.so">
  <!--          <robotNamespace></robotNamespace>-->
          </plugin>
        </sensor>
      </gazebo>
  
      <gazebo reference="{name}_joint">
      </gazebo>
  
      <gazebo reference="{name}_plate_joint">
      </gazebo>
    </xacro:if>
  </xacro:macro>

</robot>
