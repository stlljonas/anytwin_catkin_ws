<?xml version="1.0"?>

<robot xmlns:xacro="http://www.ros.org/wiki/xacro">

  <!-- RealSense ZR300/D435 -->
  <xacro:macro name="realsense_macro" params="name:=realsense parent:=base model:=1 *camera_calibration_tf">

    <!-- Camera joint -->
    <joint name="${parent}_to_${name}_camera_axis_aligned" type="fixed">
      <parent link="${parent}"/>
      <child link="${name}_camera_axis_aligned"/>
      <xacro:if value="${model == 1}">
        <origin xyz="0 0 0" rpy="0 0 0"/>
      </xacro:if>
      <xacro:if value="${model == 2}">
        <xacro:if value="$(arg simulation)">
          <origin xyz="0.038 0 -0.01112" rpy="0 0 0"/>
        </xacro:if>
        <xacro:unless value="$(arg simulation)">
          <origin xyz="0.038 0.0125 -0.01112" rpy="0 0 0"/>
        </xacro:unless>
      </xacro:if>
    </joint>

    <!-- Camera axis aligned link -->
    <link name="${name}_camera_axis_aligned"/>

    <!-- Camera calibration joint -->
    <joint name="${name}_camera_axis_aligned_to_${name}_camera" type="fixed">
      <parent link="${name}_camera_axis_aligned"/>
      <child link="${name}_camera"/>
      <xacro:insert_block name="camera_calibration_tf"/>
    </joint>

    <!-- Camera link -->
    <link name="${name}_camera">
      <inertial>
        <origin xyz="0 0 0" rpy="0 0 0"/>
        <mass value="0.001"/>
        <inertia ixx="0.00001" ixy="0.0" ixz="0.0" iyy="0.00001" iyz="0.0" izz="0.00001"/>
      </inertial>
    </link>

    <!-- Simulation -->
    <xacro:if value="$(arg simulation)">

      <!-- IR optical frame joint -->
      <joint name="${name}_camera_axis_aligned_to_${name}_ir_optical_frame" type="fixed">
        <parent link="${name}_camera"/>
        <child link="${name}_ir_optical_frame"/>
        <origin xyz="0.0 0.0 0.0" rpy="-${PI / 2} 0.0 -${PI / 2}"/>
      </joint>

      <!-- IR optical frame link -->
      <link name="${name}_ir_optical_frame">
        <inertial>
          <origin xyz="0 0 0" rpy="0 0 0"/>
          <!-- Set the inertial parameters to neglectable values: these effects will be considered on a different rigid body -->
          <mass value="0.001"/>
          <inertia ixx="0.00001" ixy="0.0" ixz="0.0" iyy="0.00001" iyz="0.0" izz="0.00001"/>
        </inertial>
      </link>

      <!-- Gazebo plugin -->
      <gazebo reference="${name}_camera">
        <sensor type="depth" name="${name}_camera">
          <always_on>1</always_on>
          <visualize>true</visualize>
          <camera>
            <horizontal_fov>1.0297</horizontal_fov> <!-- 59 degrees -->
            <image>
              <width>640</width>
              <height>480</height>
              <format>R8G8B8</format>
            </image>
            <depth_camera>

            </depth_camera>
            <clip>
              <near>0.1</near>
              <far>10.0</far>
            </clip>
          </camera>
          <plugin name="camera_controller" filename="libgazebo_ros_openni_kinect.so">
            <alwaysOn>true</alwaysOn>
            <updateRate>5.0</updateRate>
            <cameraName>${name}</cameraName>
            <frameName>${name}_ir_optical_frame</frameName>
            <imageTopicName>rgb/image_raw</imageTopicName>
            <depthImageTopicName>depth/image_raw</depthImageTopicName>
            <pointCloudTopicName>points2</pointCloudTopicName>
            <cameraInfoTopicName>rgb/camera_info</cameraInfoTopicName>
            <depthImageCameraInfoTopicName>depth/camera_info</depthImageCameraInfoTopicName>
            <pointCloudCutoff>0.4</pointCloudCutoff>
            <hackBaseline>0.07</hackBaseline>
            <distortionK1>0.0</distortionK1>
            <distortionK2>0.0</distortionK2>
            <distortionK3>0.0</distortionK3>
            <distortionT1>0.0</distortionT1>
            <distortionT2>0.0</distortionT2>
            <CxPrime>0.0</CxPrime>
            <Cx>0.0</Cx>
            <Cy>0.0</Cy>
            <focalLength>0.0</focalLength>
          </plugin>
        </sensor>
      </gazebo>
    </xacro:if> <!-- simulation -->
  </xacro:macro>

</robot>
