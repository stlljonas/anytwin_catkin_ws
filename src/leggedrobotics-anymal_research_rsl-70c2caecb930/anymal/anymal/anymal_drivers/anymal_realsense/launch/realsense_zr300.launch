<?xml version="1.0" encoding="utf-8"?>

<launch>

  <!-- "camera" should be a user friendly string to uniquely identify the device namespace.
       All topics are pushed down into the "camera" namespace, and it is prepended to tf frame ids. -->
  <arg name="camera"          default="realsense_zr300" />

  <!-- Type of RealSense camera -->
  <arg name="camera_type"     default="ZR300" />

  <!-- "serial_no" or "usb_port_id" should be a unique identifier to connect to a device -->
  <arg name="serial_no"     default="" />
  <arg name="usb_port_id"   default="" /> <!-- USB "Bus#-Port#" -->

  <!-- Best know configuration for generating depth registered point cloud. -->
  <arg name="mode"                  default="manual" />
  <arg name="color_width"           default="640" />
  <arg name="color_height"          default="480" />
  <arg name="depth_width"           default="480" />
  <arg name="depth_height"          default="360" />
  <arg name="depth_fps"             default="30" />
  <arg name="color_fps"             default="30" />
  <arg name="publish_every_nth_msg" default="3" />
  <arg name="time_offset"           default="-0.03" />

  <!-- Arguments for remapping all device namespaces -->
  <arg name="depth"            default="depth" />
  <arg name="rgb"              default="rgb" />
  <arg name="ir"               default="ir" />
  <arg name="ir2"              default="ir2" />
  <arg name="fisheye"          default="fisheye" />
  <arg name="imu"              default="imu" />
  <arg name="depth_registered" default="depth_registered" />
  <arg name="projector"        default="projector" />

  <!-- Size of message queue for synchronizing subscribed topics in depth_image_proc package.
       Increase this value for higher resolution and/or frame rates.
       If the depth_registered pointcloud topic generated by the depth_image_proc package does not contain data,
       increase this value further. -->
  <arg name="queue_size"       default="100" />
  <param name="$(arg camera)/points_xyzrgb_sw_registered/queue_size" type="int" value="$(arg queue_size)" />

  <!-- Optionally suppress loading the driver nodelet. Useful while playing back recorded raw data from a bag.-->
  <arg name="load_driver"   default="true" />
  <arg name="publish_tf"    default="true" />

  <!-- Enable or disable cameras -->
  <arg name="enable_ir"                       default="true"/>
  <arg name="enable_ir2"                      default="true"/>
  <arg name="enable_color"                    default="true"/>
  <arg name="enable_fisheye"                  default="true"/>
  <arg name="enable_imu"                      default="false"/>
  <arg name="enable_depth"                    default="false"/>
  <arg name="enable_pointcloud"               default="false"/>

  <!-- TFs -->
  <arg name="base_frame_id"                   default="realsense_zr300_camera"/>
  <arg name="depth_frame_id"                  default="realsense_zr300_depth_frame"/>
  <arg name="depth_optical_frame_id"          default="realsense_zr300_depth_optical_frame"/>
  <arg name="color_frame_id"                  default="realsense_zr300_color_frame"/>
  <arg name="color_optical_frame_id"          default="realsense_zr300_color_optical_frame"/>
  <arg name="ir_frame_id"                     default="realsense_zr300_ir_frame"/>
  <arg name="ir_optical_frame_id"             default="realsense_zr300_ir_optical_frame"/>
  <arg name="ir2_frame_id"                    default="realsense_zr300_ir2_frame"/>
  <arg name="ir2_optical_frame_id"            default="realsense_zr300_ir2_optical_frame"/>
  <arg name="fisheye_frame_id"                default="realsense_zr300_fisheye_frame"/>
  <arg name="fisheye_optical_frame_id"        default="realsense_zr300_fisheye_optical_frame"/>
  <arg name="imu_frame_id"                    default="realsense_zr300_imu_frame"/>
  <arg name="imu_optical_frame_id"            default="realsense_zr300_imu_optical_frame"/>

  <!-- Processing Modules -->
  <arg name="processing_modules"              default="false"/>
  <arg name="rgb_processing"                  default="false"/>
  <arg name="ir_processing"                   default="false"/>
  <arg name="depth_processing"                default="false"/>
  <arg name="depth_registered_processing"     default="false"/>
  <arg name="disparity_processing"            default="false"/>
  <arg name="disparity_registered_processing" default="false"/>
  <arg name="hw_registered_processing"        default="false" />
  <arg name="sw_registered_processing"        default="false" />

  <!-- Disable respawn topics by default -->
  <arg name="respawn" default="false" />

  <!-- Worker threads for the nodelet manager -->
  <arg name="num_worker_threads" default="4" />

  <!-- Push down all topics/nodelets into "camera" namespace -->
  <group ns="$(arg camera)">

    <!-- Start nodelet manager in provided namespace -->
    <arg name="manager" value="$(arg camera)_nodelet_manager" />
    <arg name="debug" default="false" /> <!-- Run manager in GDB? -->
    <include file="$(find rgbd_launch)/launch/includes/manager.launch.xml">
      <arg name="name"                value="$(arg manager)" />
      <arg name="debug"               value="$(arg debug)" />
      <arg name="num_worker_threads"  value="$(arg num_worker_threads)" />
    </include>

    <!-- Load driver -->
    <node pkg="nodelet" type="nodelet" name="driver"
      args="load realsense_camera/$(arg camera_type)Nodelet $(arg manager)">
      <param name="serial_no"                type="str"  value="$(arg serial_no)" />
      <param name="usb_port_id"              type="str"  value="$(arg usb_port_id)" />
      <param name="camera_type"              type="str"  value="$(arg camera_type)" />
      <param name="enable_depth"             type="bool" value="$(arg enable_depth)" />
      <param name="enable_color"             type="bool" value="$(arg enable_color)" />
      <param name="enable_ir"                type="bool" value="$(arg enable_ir)" />
      <param name="enable_ir2"               type="bool" value="$(arg enable_ir2)" />
      <param name="enable_pointcloud"        type="bool" value="$(arg enable_pointcloud)" />
      <param name="enable_fisheye"           type="bool" value="$(arg enable_fisheye)" />
      <param name="enable_imu"               type="bool" value="$(arg enable_imu)" />
      <param name="enable_tf"                type="bool" value="$(arg publish_tf)" />
      <param name="mode"                     type="str"  value="$(arg mode)" />
      <param name="depth_width"              type="int"  value="$(arg depth_width)" />
      <param name="depth_height"             type="int"  value="$(arg depth_height)" />
      <param name="color_width"              type="int"  value="$(arg color_width)" />
      <param name="color_height"             type="int"  value="$(arg color_height)" />
      <param name="depth_fps"                type="int"  value="$(arg depth_fps)" />
      <param name="color_fps"                type="int"  value="$(arg color_fps)" />
      <param name="base_frame_id"            type="str"  value="$(arg base_frame_id)" />
      <param name="depth_frame_id"           type="str"  value="$(arg depth_frame_id)" />
      <param name="color_frame_id"           type="str"  value="$(arg color_frame_id)" />
      <param name="ir_frame_id"              type="str"  value="$(arg ir_frame_id)" />
      <param name="ir2_frame_id"             type="str"  value="$(arg ir2_frame_id)" />
      <param name="fisheye_frame_id"         type="str"  value="$(arg fisheye_frame_id)" />
      <param name="imu_frame_id"             type="str"  value="$(arg imu_frame_id)" />
      <param name="depth_optical_frame_id"   type="str"  value="$(arg depth_optical_frame_id)" />
      <param name="color_optical_frame_id"   type="str"  value="$(arg color_optical_frame_id)" />
      <param name="ir_optical_frame_id"      type="str"  value="$(arg ir_optical_frame_id)" />
      <param name="ir2_optical_frame_id"     type="str"  value="$(arg ir2_optical_frame_id)" />
      <param name="fisheye_optical_frame_id" type="str"  value="$(arg fisheye_optical_frame_id)" />
      <param name="imu_optical_frame_id"     type="str"  value="$(arg imu_optical_frame_id)" />
      <param name="r200_lr_auto_exposure_enabled"        value="1" />
      <param name="publish_every_nth_msg"                value="$(arg publish_every_nth_msg)" />
      <param name="time_offset"                          value="$(arg time_offset)" />

      <remap from="depth"    to="$(arg depth)" />
      <remap from="color"    to="$(arg rgb)" />
      <remap from="ir"       to="$(arg ir)" />
      <remap from="ir2"      to="$(arg ir2)" />
      <remap from="fisheye"  to="$(arg fisheye)" />
      <remap from="imu"      to="$(arg imu)" />
    </node>

    <!-- Load standard constellation of processing nodelets -->
    <include if="$(arg processing_modules)"
             file="$(find rgbd_launch)/launch/includes/processing.launch.xml">
      <arg name="manager"                         value="$(arg manager)" />
      <arg name="rgb"                             value="$(arg rgb)" />
      <arg name="ir"                              value="$(arg ir)" />
      <arg name="depth"                           value="$(arg depth)" />
      <arg name="depth_registered"                value="$(arg depth_registered)" />
      <arg name="projector"                       value="$(arg projector)" />
      <arg name="respawn"                         value="$(arg respawn)" />
      <arg name="rgb_processing"                  value="$(arg rgb_processing)" />
      <arg name="ir_processing"                   value="$(arg ir_processing)" />
      <arg name="depth_processing"                value="$(arg depth_processing)" />
      <arg name="depth_registered_processing"     value="$(arg depth_registered_processing)" />
      <arg name="disparity_processing"            value="$(arg disparity_processing)" />
      <arg name="disparity_registered_processing" value="$(arg disparity_registered_processing)" />
      <arg name="hw_registered_processing"        value="$(arg hw_registered_processing)" />
      <arg name="sw_registered_processing"        value="$(arg sw_registered_processing)" />
    </include>

  </group> <!-- camera -->

</launch>
