
#pragma once

#include <Eigen/Core>

// robotutils
#include <robot_utils/physical_definitions.hpp>

namespace starleth_dynamics {
namespace internal {

Eigen::VectorXd getGravityGeneralizedForces(const Eigen::VectorXd& stateEulerXyz) {
  double t0, t9870, t9871, t9872, t9873, t9874, t9875, t9876, t9877, t9878, t9879, t9880, t9881, t9882, t9883, t9884, t9885, t9886, t9887,
      t9888, t9889, t9890, t9891, t9892, t9893, t9894, t9895, t9896, t9897, t9898, t9899, t9900, t9901, t9902, t9903, t9904, t9905, t9906,
      t9907, t9908, t9909, t9910, t9911, t9912, t9913, t9914, t9915, t9916, t9917, t9918, t9919, t9920, t9921, t9922, t9923, t9924, t9925,
      t9926, t9927, t9928, t9929, t9930, t9931, t9932, t9933, t9934, t9935;
  Eigen::VectorXd gravity = Eigen::VectorXd::Zero(18);

  double qAL = stateEulerXyz[3];
  double qBE = stateEulerXyz[4];
  double qGA = stateEulerXyz[5];

  double qLF_HAA = stateEulerXyz[6];
  double qLF_HFE = stateEulerXyz[7];
  double qLF_KFE = stateEulerXyz[8];

  double qRF_HAA = stateEulerXyz[9];
  double qRF_HFE = stateEulerXyz[10];
  double qRF_KFE = stateEulerXyz[11];

  double qLH_HAA = stateEulerXyz[12];
  double qLH_HFE = stateEulerXyz[13];
  double qLH_KFE = stateEulerXyz[14];

  double qRH_HAA = stateEulerXyz[15];
  double qRH_HFE = stateEulerXyz[16];
  double qRH_KFE = stateEulerXyz[17];

  double mB = 20.7;
  double mH = 1.8;
  double mT = 0.31;
  double mS = 0.32;

  double sB = 0.0;
  double sH = -0.055;
  double sT = -0.148;
  double sS = -0.084;

  double lH = -0.0685;
  double lT = -0.2;
  double lS = -0.276;

  double g = robot_utils::physical_definitions::getAbsoluteGravityAcceleration();

  t9870 = cos(qBE);
  t9871 = sin(qAL);
  t9872 = cos(qLF_HAA);
  t9873 = cos(qLH_HAA);
  t9874 = cos(qAL);
  t9875 = cos(qGA);
  t9876 = sin(qLF_HAA);
  t9877 = sin(qLH_HAA);
  t9878 = cos(qRF_HAA);
  t9879 = cos(qRH_HAA);
  t9880 = sin(qRF_HAA);
  t9881 = sin(qRH_HAA);
  t9882 = sin(qGA);
  t9883 = sin(qLF_HFE);
  t9884 = sin(qLH_HFE);
  t9885 = sin(qRF_HFE);
  t9886 = sin(qRH_HFE);
  t9887 = cos(qLF_HFE);
  t9888 = cos(qLH_HFE);
  t9889 = cos(qRF_HFE);
  t9890 = cos(qRH_HFE);
  t9891 = sin(qBE);
  t9892 = cos(qLF_KFE);
  t9893 = cos(qLH_KFE);
  t9894 = cos(qRF_KFE);
  t9895 = cos(qRH_KFE);
  t9896 = sin(qLF_KFE);
  t9897 = sin(qLH_KFE);
  t9898 = sin(qRF_KFE);
  t9899 = sin(qRH_KFE);
  t9900 = lH * t9870 * t9874 * t9876;
  t9901 = lH * t9871 * t9872 * t9875;
  t9902 = lH * t9872 * t9882 * t9891 * t9874;
  t9903 = sS * t9871 * t9882 * t9892 * t9887;
  t9904 = sS * t9891 * t9874 * t9883 * t9875 * t9896;
  t9905 = sS * t9871 * t9875 * t9876 * t9887 * t9896;
  t9906 = sS * t9871 * t9883 * t9892 * t9875 * t9876;
  t9907 = sS * t9882 * t9891 * t9874 * t9876 * t9887 * t9896;
  t9908 = sS * t9882 * t9891 * t9874 * t9883 * t9892 * t9876;
  t9909 = lH * t9870 * t9880 * t9874;
  t9910 = lH * t9871 * t9875 * t9878;
  t9911 = lH * t9882 * t9891 * t9874 * t9878;
  t9912 = sS * t9871 * t9882 * t9894 * t9889;
  t9913 = sS * t9891 * t9874 * t9875 * t9885 * t9898;
  t9914 = sS * t9871 * t9880 * t9875 * t9889 * t9898;
  t9915 = sS * t9871 * t9880 * t9875 * t9885 * t9894;
  t9916 = sS * t9880 * t9882 * t9891 * t9874 * t9889 * t9898;
  t9917 = sS * t9880 * t9882 * t9891 * t9874 * t9885 * t9894;
  t9918 = lH * t9870 * t9874 * t9877;
  t9919 = lH * t9871 * t9873 * t9875;
  t9920 = lH * t9873 * t9882 * t9891 * t9874;
  t9921 = sS * t9871 * t9882 * t9893 * t9888;
  t9922 = sS * t9891 * t9874 * t9875 * t9884 * t9897;
  t9923 = sS * t9871 * t9875 * t9877 * t9888 * t9897;
  t9924 = sS * t9871 * t9875 * t9884 * t9893 * t9877;
  t9925 = sS * t9882 * t9891 * t9874 * t9877 * t9888 * t9897;
  t9926 = sS * t9882 * t9891 * t9874 * t9884 * t9893 * t9877;
  t9927 = lH * t9870 * t9881 * t9874;
  t9928 = lH * t9871 * t9875 * t9879;
  t9929 = lH * t9882 * t9891 * t9874 * t9879;
  t9930 = sS * t9871 * t9890 * t9882 * t9895;
  t9931 = sS * t9891 * t9874 * t9875 * t9886 * t9899;
  t9932 = sS * t9871 * t9881 * t9890 * t9875 * t9899;
  t9933 = sS * t9871 * t9881 * t9875 * t9886 * t9895;
  t9934 = sS * t9881 * t9890 * t9882 * t9891 * t9874 * t9899;
  t9935 = sS * t9881 * t9882 * t9891 * t9874 * t9886 * t9895;
  t0 = gravity(2, 0) = g * (mB + mH * 4.0 + mS * 4.0 + mT * 4.0);
  gravity(3, 0) =
      -g * mB * sB * t9870 * t9871 - g * mH * sH * t9870 * t9871 * t9872 - g * mH * sH * t9870 * t9871 * t9873 -
      g * mH * sH * t9870 * t9871 * t9878 - g * mH * sH * t9870 * t9871 * t9879 - g * mH * sH * t9880 * t9874 * t9875 -
      g * mH * sH * t9881 * t9874 * t9875 - g * mH * sH * t9874 * t9875 * t9876 - g * mH * sH * t9874 * t9875 * t9877 +
      g * mT * sT * t9882 * t9874 * t9883 + g * mT * sT * t9882 * t9874 * t9884 + g * mT * sT * t9882 * t9874 * t9885 +
      g * mT * sT * t9882 * t9874 * t9886 - g * lH * mS * t9870 * t9871 * t9872 - g * lH * mS * t9870 * t9871 * t9873 -
      g * lH * mS * t9870 * t9871 * t9878 - g * lH * mS * t9870 * t9871 * t9879 - g * lH * mS * t9880 * t9874 * t9875 -
      g * lH * mS * t9881 * t9874 * t9875 - g * lH * mS * t9874 * t9875 * t9876 - g * lH * mS * t9874 * t9875 * t9877 -
      g * lH * mT * t9870 * t9871 * t9872 - g * lH * mT * t9870 * t9871 * t9873 - g * lH * mT * t9870 * t9871 * t9878 -
      g * lH * mT * t9870 * t9871 * t9879 - g * lH * mT * t9880 * t9874 * t9875 - g * lH * mT * t9881 * t9874 * t9875 -
      g * lH * mT * t9874 * t9875 * t9876 - g * lH * mT * t9874 * t9875 * t9877 + g * lT * mS * t9882 * t9874 * t9883 +
      g * lT * mS * t9882 * t9874 * t9884 + g * lT * mS * t9882 * t9874 * t9885 + g * lT * mS * t9882 * t9874 * t9886 +
      g * lH * mS * t9871 * t9880 * t9882 * t9891 + g * lH * mS * t9871 * t9881 * t9882 * t9891 +
      g * lH * mS * t9871 * t9882 * t9891 * t9876 + g * lH * mS * t9871 * t9882 * t9891 * t9877 +
      g * lH * mT * t9871 * t9880 * t9882 * t9891 + g * lH * mT * t9871 * t9881 * t9882 * t9891 +
      g * lH * mT * t9871 * t9882 * t9891 * t9876 + g * lH * mT * t9871 * t9882 * t9891 * t9877 -
      g * lT * mS * t9870 * t9871 * t9872 * t9887 - g * lT * mS * t9870 * t9871 * t9890 * t9879 -
      g * lT * mS * t9870 * t9871 * t9873 * t9888 + g * lT * mS * t9871 * t9891 * t9883 * t9875 -
      g * lT * mS * t9881 * t9890 * t9874 * t9875 + g * lT * mS * t9871 * t9891 * t9875 * t9884 +
      g * lT * mS * t9871 * t9891 * t9875 * t9885 + g * lT * mS * t9871 * t9891 * t9875 * t9886 -
      g * lT * mS * t9870 * t9871 * t9878 * t9889 - g * lT * mS * t9880 * t9874 * t9875 * t9889 -
      g * lT * mS * t9874 * t9875 * t9876 * t9887 - g * lT * mS * t9874 * t9875 * t9877 * t9888 +
      g * mH * sH * t9871 * t9880 * t9882 * t9891 + g * mH * sH * t9871 * t9881 * t9882 * t9891 +
      g * mH * sH * t9871 * t9882 * t9891 * t9876 + g * mH * sH * t9871 * t9882 * t9891 * t9877 +
      g * mS * sS * t9882 * t9874 * t9883 * t9892 + g * mS * sS * t9882 * t9874 * t9884 * t9893 +
      g * mS * sS * t9882 * t9874 * t9885 * t9894 + g * mS * sS * t9890 * t9882 * t9874 * t9899 +
      g * mS * sS * t9882 * t9874 * t9886 * t9895 + g * mS * sS * t9882 * t9874 * t9887 * t9896 +
      g * mS * sS * t9882 * t9874 * t9888 * t9897 + g * mS * sS * t9882 * t9874 * t9889 * t9898 -
      g * mT * sT * t9870 * t9871 * t9872 * t9887 - g * mT * sT * t9870 * t9871 * t9890 * t9879 -
      g * mT * sT * t9870 * t9871 * t9873 * t9888 + g * mT * sT * t9871 * t9891 * t9883 * t9875 -
      g * mT * sT * t9881 * t9890 * t9874 * t9875 + g * mT * sT * t9871 * t9891 * t9875 * t9884 +
      g * mT * sT * t9871 * t9891 * t9875 * t9885 + g * mT * sT * t9871 * t9891 * t9875 * t9886 -
      g * mT * sT * t9870 * t9871 * t9878 * t9889 - g * mT * sT * t9880 * t9874 * t9875 * t9889 -
      g * mT * sT * t9874 * t9875 * t9876 * t9887 - g * mT * sT * t9874 * t9875 * t9877 * t9888 +
      g * lT * mS * t9871 * t9881 * t9890 * t9882 * t9891 + g * lT * mS * t9871 * t9880 * t9882 * t9891 * t9889 +
      g * lT * mS * t9871 * t9882 * t9891 * t9876 * t9887 + g * lT * mS * t9871 * t9882 * t9891 * t9877 * t9888 +
      g * mS * sS * t9870 * t9871 * t9872 * t9883 * t9896 - g * mS * sS * t9870 * t9871 * t9872 * t9892 * t9887 +
      g * mS * sS * t9871 * t9891 * t9883 * t9892 * t9875 + g * mS * sS * t9870 * t9871 * t9873 * t9884 * t9897 -
      g * mS * sS * t9870 * t9871 * t9873 * t9893 * t9888 - g * mS * sS * t9870 * t9871 * t9890 * t9895 * t9879 +
      g * mS * sS * t9871 * t9891 * t9875 * t9884 * t9893 - g * mS * sS * t9881 * t9890 * t9874 * t9875 * t9895 +
      g * mS * sS * t9871 * t9891 * t9875 * t9885 * t9894 + g * mS * sS * t9871 * t9890 * t9891 * t9875 * t9899 +
      g * mS * sS * t9871 * t9891 * t9875 * t9886 * t9895 + g * mS * sS * t9870 * t9871 * t9885 * t9878 * t9898 -
      g * mS * sS * t9870 * t9871 * t9894 * t9878 * t9889 + g * mS * sS * t9871 * t9891 * t9875 * t9887 * t9896 +
      g * mS * sS * t9880 * t9874 * t9875 * t9885 * t9898 - g * mS * sS * t9880 * t9874 * t9875 * t9894 * t9889 +
      g * mS * sS * t9871 * t9891 * t9875 * t9888 * t9897 + g * mS * sS * t9874 * t9883 * t9875 * t9876 * t9896 -
      g * mS * sS * t9874 * t9892 * t9875 * t9876 * t9887 + g * mS * sS * t9870 * t9871 * t9886 * t9879 * t9899 +
      g * mS * sS * t9871 * t9891 * t9875 * t9889 * t9898 + g * mS * sS * t9881 * t9874 * t9875 * t9886 * t9899 +
      g * mS * sS * t9874 * t9875 * t9884 * t9877 * t9897 - g * mS * sS * t9874 * t9875 * t9893 * t9877 * t9888 +
      g * mT * sT * t9871 * t9881 * t9890 * t9882 * t9891 + g * mT * sT * t9871 * t9880 * t9882 * t9891 * t9889 +
      g * mT * sT * t9871 * t9882 * t9891 * t9876 * t9887 + g * mT * sT * t9871 * t9882 * t9891 * t9877 * t9888 +
      g * mS * sS * t9871 * t9881 * t9890 * t9882 * t9891 * t9895 - g * mS * sS * t9871 * t9880 * t9882 * t9891 * t9885 * t9898 +
      g * mS * sS * t9871 * t9880 * t9882 * t9891 * t9894 * t9889 - g * mS * sS * t9871 * t9882 * t9891 * t9883 * t9876 * t9896 +
      g * mS * sS * t9871 * t9882 * t9891 * t9892 * t9876 * t9887 - g * mS * sS * t9871 * t9881 * t9882 * t9891 * t9886 * t9899 -
      g * mS * sS * t9871 * t9882 * t9891 * t9884 * t9877 * t9897 + g * mS * sS * t9871 * t9882 * t9891 * t9893 * t9877 * t9888;
  gravity(4, 0) =
      -g * mB * sB * t9891 * t9874 - g * mH * sH * t9872 * t9891 * t9874 - g * mH * sH * t9873 * t9891 * t9874 -
      g * mH * sH * t9891 * t9874 * t9878 - g * mH * sH * t9891 * t9874 * t9879 - g * lH * mS * t9872 * t9891 * t9874 -
      g * lH * mS * t9873 * t9891 * t9874 - g * lH * mS * t9891 * t9874 * t9878 - g * lH * mS * t9891 * t9874 * t9879 -
      g * lH * mT * t9872 * t9891 * t9874 - g * lH * mT * t9873 * t9891 * t9874 - g * lH * mT * t9891 * t9874 * t9878 -
      g * lH * mT * t9891 * t9874 * t9879 - g * lH * mS * t9870 * t9880 * t9882 * t9874 - g * lH * mS * t9870 * t9881 * t9882 * t9874 -
      g * lH * mS * t9870 * t9882 * t9874 * t9876 - g * lH * mS * t9870 * t9882 * t9874 * t9877 -
      g * lH * mT * t9870 * t9880 * t9882 * t9874 - g * lH * mT * t9870 * t9881 * t9882 * t9874 -
      g * lH * mT * t9870 * t9882 * t9874 * t9876 - g * lH * mT * t9870 * t9882 * t9874 * t9877 -
      g * lT * mS * t9870 * t9874 * t9883 * t9875 - g * lT * mS * t9870 * t9874 * t9875 * t9884 -
      g * lT * mS * t9870 * t9874 * t9875 * t9885 - g * lT * mS * t9870 * t9874 * t9875 * t9886 -
      g * lT * mS * t9872 * t9891 * t9874 * t9887 - g * lT * mS * t9890 * t9891 * t9874 * t9879 -
      g * lT * mS * t9873 * t9891 * t9874 * t9888 - g * lT * mS * t9891 * t9874 * t9878 * t9889 -
      g * mH * sH * t9870 * t9880 * t9882 * t9874 - g * mH * sH * t9870 * t9881 * t9882 * t9874 -
      g * mH * sH * t9870 * t9882 * t9874 * t9876 - g * mH * sH * t9870 * t9882 * t9874 * t9877 -
      g * mT * sT * t9870 * t9874 * t9883 * t9875 - g * mT * sT * t9870 * t9874 * t9875 * t9884 -
      g * mT * sT * t9870 * t9874 * t9875 * t9885 - g * mT * sT * t9870 * t9874 * t9875 * t9886 -
      g * mT * sT * t9872 * t9891 * t9874 * t9887 - g * mT * sT * t9890 * t9891 * t9874 * t9879 -
      g * mT * sT * t9873 * t9891 * t9874 * t9888 - g * mT * sT * t9891 * t9874 * t9878 * t9889 -
      g * lT * mS * t9870 * t9881 * t9890 * t9882 * t9874 - g * lT * mS * t9870 * t9880 * t9882 * t9874 * t9889 -
      g * lT * mS * t9870 * t9882 * t9874 * t9876 * t9887 - g * lT * mS * t9870 * t9882 * t9874 * t9877 * t9888 -
      g * mS * sS * t9870 * t9874 * t9883 * t9892 * t9875 - g * mS * sS * t9870 * t9874 * t9875 * t9884 * t9893 -
      g * mS * sS * t9870 * t9874 * t9875 * t9885 * t9894 + g * mS * sS * t9872 * t9891 * t9874 * t9883 * t9896 -
      g * mS * sS * t9872 * t9891 * t9874 * t9892 * t9887 - g * mS * sS * t9870 * t9890 * t9874 * t9875 * t9899 -
      g * mS * sS * t9870 * t9874 * t9875 * t9886 * t9895 + g * mS * sS * t9873 * t9891 * t9874 * t9884 * t9897 -
      g * mS * sS * t9873 * t9891 * t9874 * t9893 * t9888 - g * mS * sS * t9870 * t9874 * t9875 * t9887 * t9896 -
      g * mS * sS * t9890 * t9891 * t9874 * t9895 * t9879 - g * mS * sS * t9870 * t9874 * t9875 * t9888 * t9897 -
      g * mS * sS * t9870 * t9874 * t9875 * t9889 * t9898 + g * mS * sS * t9891 * t9874 * t9885 * t9878 * t9898 -
      g * mS * sS * t9891 * t9874 * t9894 * t9878 * t9889 + g * mS * sS * t9891 * t9874 * t9886 * t9879 * t9899 -
      g * mT * sT * t9870 * t9881 * t9890 * t9882 * t9874 - g * mT * sT * t9870 * t9880 * t9882 * t9874 * t9889 -
      g * mT * sT * t9870 * t9882 * t9874 * t9876 * t9887 - g * mT * sT * t9870 * t9882 * t9874 * t9877 * t9888 -
      g * mS * sS * t9870 * t9881 * t9890 * t9882 * t9874 * t9895 + g * mS * sS * t9870 * t9880 * t9882 * t9874 * t9885 * t9898 -
      g * mS * sS * t9870 * t9880 * t9882 * t9874 * t9894 * t9889 + g * mS * sS * t9870 * t9882 * t9874 * t9883 * t9876 * t9896 -
      g * mS * sS * t9870 * t9882 * t9874 * t9892 * t9876 * t9887 + g * mS * sS * t9870 * t9881 * t9882 * t9874 * t9886 * t9899 +
      g * mS * sS * t9870 * t9882 * t9874 * t9884 * t9877 * t9897 - g * mS * sS * t9870 * t9882 * t9874 * t9893 * t9877 * t9888;
  gravity(5, 0) =
      g * mH * sH * t9871 * t9880 * t9882 + g * mH * sH * t9871 * t9881 * t9882 + g * mH * sH * t9871 * t9882 * t9876 +
      g * mH * sH * t9871 * t9882 * t9877 + g * mT * sT * t9871 * t9883 * t9875 + g * mT * sT * t9871 * t9875 * t9884 +
      g * mT * sT * t9871 * t9875 * t9885 + g * mT * sT * t9871 * t9875 * t9886 + g * lH * mS * t9871 * t9880 * t9882 +
      g * lH * mS * t9871 * t9881 * t9882 + g * lH * mS * t9871 * t9882 * t9876 + g * lH * mS * t9871 * t9882 * t9877 +
      g * lH * mT * t9871 * t9880 * t9882 + g * lH * mT * t9871 * t9881 * t9882 + g * lH * mT * t9871 * t9882 * t9876 +
      g * lH * mT * t9871 * t9882 * t9877 + g * lT * mS * t9871 * t9883 * t9875 + g * lT * mS * t9871 * t9875 * t9884 +
      g * lT * mS * t9871 * t9875 * t9885 + g * lT * mS * t9871 * t9875 * t9886 - g * lH * mS * t9880 * t9891 * t9874 * t9875 -
      g * lH * mS * t9881 * t9891 * t9874 * t9875 - g * lH * mS * t9891 * t9874 * t9875 * t9876 -
      g * lH * mS * t9891 * t9874 * t9875 * t9877 - g * lH * mT * t9880 * t9891 * t9874 * t9875 -
      g * lH * mT * t9881 * t9891 * t9874 * t9875 - g * lH * mT * t9891 * t9874 * t9875 * t9876 -
      g * lH * mT * t9891 * t9874 * t9875 * t9877 + g * lT * mS * t9871 * t9881 * t9890 * t9882 +
      g * lT * mS * t9882 * t9891 * t9874 * t9883 + g * lT * mS * t9871 * t9880 * t9882 * t9889 +
      g * lT * mS * t9882 * t9891 * t9874 * t9884 + g * lT * mS * t9882 * t9891 * t9874 * t9885 +
      g * lT * mS * t9882 * t9891 * t9874 * t9886 + g * lT * mS * t9871 * t9882 * t9876 * t9887 +
      g * lT * mS * t9871 * t9882 * t9877 * t9888 - g * mH * sH * t9880 * t9891 * t9874 * t9875 -
      g * mH * sH * t9881 * t9891 * t9874 * t9875 - g * mH * sH * t9891 * t9874 * t9875 * t9876 -
      g * mH * sH * t9891 * t9874 * t9875 * t9877 + g * mS * sS * t9871 * t9883 * t9892 * t9875 +
      g * mS * sS * t9871 * t9875 * t9884 * t9893 + g * mS * sS * t9871 * t9875 * t9885 * t9894 +
      g * mS * sS * t9871 * t9890 * t9875 * t9899 + g * mS * sS * t9871 * t9875 * t9886 * t9895 +
      g * mS * sS * t9871 * t9875 * t9887 * t9896 + g * mS * sS * t9871 * t9875 * t9888 * t9897 +
      g * mS * sS * t9871 * t9875 * t9889 * t9898 + g * mT * sT * t9871 * t9881 * t9890 * t9882 +
      g * mT * sT * t9882 * t9891 * t9874 * t9883 + g * mT * sT * t9871 * t9880 * t9882 * t9889 +
      g * mT * sT * t9882 * t9891 * t9874 * t9884 + g * mT * sT * t9882 * t9891 * t9874 * t9885 +
      g * mT * sT * t9882 * t9891 * t9874 * t9886 + g * mT * sT * t9871 * t9882 * t9876 * t9887 +
      g * mT * sT * t9871 * t9882 * t9877 * t9888 - g * lT * mS * t9881 * t9890 * t9891 * t9874 * t9875 -
      g * lT * mS * t9880 * t9891 * t9874 * t9875 * t9889 - g * lT * mS * t9891 * t9874 * t9875 * t9876 * t9887 -
      g * lT * mS * t9891 * t9874 * t9875 * t9877 * t9888 + g * mS * sS * t9871 * t9881 * t9890 * t9882 * t9895 +
      g * mS * sS * t9882 * t9891 * t9874 * t9883 * t9892 + g * mS * sS * t9882 * t9891 * t9874 * t9884 * t9893 -
      g * mS * sS * t9871 * t9880 * t9882 * t9885 * t9898 + g * mS * sS * t9871 * t9880 * t9882 * t9894 * t9889 -
      g * mS * sS * t9871 * t9882 * t9883 * t9876 * t9896 + g * mS * sS * t9871 * t9882 * t9892 * t9876 * t9887 +
      g * mS * sS * t9882 * t9891 * t9874 * t9885 * t9894 + g * mS * sS * t9890 * t9882 * t9891 * t9874 * t9899 -
      g * mS * sS * t9871 * t9881 * t9882 * t9886 * t9899 + g * mS * sS * t9882 * t9891 * t9874 * t9886 * t9895 -
      g * mS * sS * t9871 * t9882 * t9884 * t9877 * t9897 + g * mS * sS * t9871 * t9882 * t9893 * t9877 * t9888 +
      g * mS * sS * t9882 * t9891 * t9874 * t9887 * t9896 + g * mS * sS * t9882 * t9891 * t9874 * t9888 * t9897 +
      g * mS * sS * t9882 * t9891 * t9874 * t9889 * t9898 - g * mT * sT * t9881 * t9890 * t9891 * t9874 * t9875 -
      g * mT * sT * t9880 * t9891 * t9874 * t9875 * t9889 - g * mT * sT * t9891 * t9874 * t9875 * t9876 * t9887 -
      g * mT * sT * t9891 * t9874 * t9875 * t9877 * t9888 - g * mS * sS * t9881 * t9890 * t9891 * t9874 * t9875 * t9895 +
      g * mS * sS * t9880 * t9891 * t9874 * t9875 * t9885 * t9898 - g * mS * sS * t9880 * t9891 * t9874 * t9875 * t9894 * t9889 +
      g * mS * sS * t9891 * t9874 * t9883 * t9875 * t9876 * t9896 - g * mS * sS * t9891 * t9874 * t9892 * t9875 * t9876 * t9887 +
      g * mS * sS * t9881 * t9891 * t9874 * t9875 * t9886 * t9899 + g * mS * sS * t9891 * t9874 * t9875 * t9884 * t9877 * t9897 -
      g * mS * sS * t9891 * t9874 * t9875 * t9893 * t9877 * t9888;
  gravity(6, 0) = -g * mT *
                      (t9900 + t9901 + t9902 + sT * t9871 * t9872 * t9875 * t9887 + sT * t9870 * t9874 * t9876 * t9887 +
                       sT * t9872 * t9882 * t9891 * t9874 * t9887) -
                  g * mH * (sH * t9871 * t9872 * t9875 + sH * t9870 * t9874 * t9876 + sH * t9872 * t9882 * t9891 * t9874) -
                  g * mS *
                      (t9900 + t9901 + t9902 + lT * t9871 * t9872 * t9875 * t9887 + lT * t9870 * t9874 * t9876 * t9887 +
                       lT * t9872 * t9882 * t9891 * t9874 * t9887 - sS * t9871 * t9872 * t9883 * t9875 * t9896 +
                       sS * t9871 * t9872 * t9892 * t9875 * t9887 - sS * t9870 * t9874 * t9883 * t9876 * t9896 +
                       sS * t9870 * t9874 * t9892 * t9876 * t9887 - sS * t9872 * t9882 * t9891 * t9874 * t9883 * t9896 +
                       sS * t9872 * t9882 * t9891 * t9874 * t9892 * t9887);
  gravity(7, 0) = g * mS *
                      (t9903 + t9904 + t9905 + t9906 + t9907 + t9908 + lT * t9871 * t9882 * t9887 - lT * t9870 * t9872 * t9874 * t9883 +
                       lT * t9871 * t9883 * t9875 * t9876 - lT * t9891 * t9874 * t9875 * t9887 - sS * t9871 * t9882 * t9883 * t9896 +
                       lT * t9882 * t9891 * t9874 * t9883 * t9876 - sS * t9870 * t9872 * t9874 * t9883 * t9892 -
                       sS * t9870 * t9872 * t9874 * t9887 * t9896 - sS * t9891 * t9874 * t9892 * t9875 * t9887) +
                  g * mT *
                      (sT * t9871 * t9882 * t9887 - sT * t9870 * t9872 * t9874 * t9883 + sT * t9871 * t9883 * t9875 * t9876 -
                       sT * t9891 * t9874 * t9875 * t9887 + sT * t9882 * t9891 * t9874 * t9883 * t9876);
  gravity(8, 0) =
      g * mS *
      (t9903 + t9904 + t9905 + t9906 + t9907 + t9908 - sS * t9871 * t9882 * t9883 * t9896 - sS * t9870 * t9872 * t9874 * t9883 * t9892 -
       sS * t9870 * t9872 * t9874 * t9887 * t9896 - sS * t9891 * t9874 * t9892 * t9875 * t9887);
  gravity(9, 0) = -g * mT *
                      (t9910 + t9911 + t9909 + sT * t9870 * t9880 * t9874 * t9889 + sT * t9871 * t9875 * t9878 * t9889 +
                       sT * t9882 * t9891 * t9874 * t9878 * t9889) -
                  g * mH * (sH * t9870 * t9880 * t9874 + sH * t9871 * t9875 * t9878 + sH * t9882 * t9891 * t9874 * t9878) -
                  g * mS *
                      (t9910 + t9911 + t9909 + lT * t9870 * t9880 * t9874 * t9889 + lT * t9871 * t9875 * t9878 * t9889 +
                       lT * t9882 * t9891 * t9874 * t9878 * t9889 - sS * t9870 * t9880 * t9874 * t9885 * t9898 +
                       sS * t9870 * t9880 * t9874 * t9894 * t9889 - sS * t9871 * t9875 * t9885 * t9878 * t9898 +
                       sS * t9871 * t9875 * t9894 * t9878 * t9889 - sS * t9882 * t9891 * t9874 * t9885 * t9878 * t9898 +
                       sS * t9882 * t9891 * t9874 * t9894 * t9878 * t9889);
  gravity(10, 0) = g * mS *
                       (t9912 + t9913 + t9914 + t9915 + t9916 + t9917 + lT * t9871 * t9882 * t9889 + lT * t9871 * t9880 * t9875 * t9885 -
                        lT * t9870 * t9874 * t9885 * t9878 - lT * t9891 * t9874 * t9875 * t9889 - sS * t9871 * t9882 * t9885 * t9898 +
                        lT * t9880 * t9882 * t9891 * t9874 * t9885 - sS * t9870 * t9874 * t9885 * t9894 * t9878 -
                        sS * t9891 * t9874 * t9875 * t9894 * t9889 - sS * t9870 * t9874 * t9878 * t9889 * t9898) +
                   g * mT *
                       (sT * t9871 * t9882 * t9889 + sT * t9871 * t9880 * t9875 * t9885 - sT * t9870 * t9874 * t9885 * t9878 -
                        sT * t9891 * t9874 * t9875 * t9889 + sT * t9880 * t9882 * t9891 * t9874 * t9885);
  gravity(11, 0) =
      g * mS *
      (t9912 + t9913 + t9914 + t9915 + t9916 + t9917 - sS * t9871 * t9882 * t9885 * t9898 - sS * t9870 * t9874 * t9885 * t9894 * t9878 -
       sS * t9891 * t9874 * t9875 * t9894 * t9889 - sS * t9870 * t9874 * t9878 * t9889 * t9898);
  gravity(12, 0) = -g * mT *
                       (t9920 + t9918 + t9919 + sT * t9871 * t9873 * t9875 * t9888 + sT * t9870 * t9874 * t9877 * t9888 +
                        sT * t9873 * t9882 * t9891 * t9874 * t9888) -
                   g * mH * (sH * t9871 * t9873 * t9875 + sH * t9870 * t9874 * t9877 + sH * t9873 * t9882 * t9891 * t9874) -
                   g * mS *
                       (t9920 + t9918 + t9919 + lT * t9871 * t9873 * t9875 * t9888 + lT * t9870 * t9874 * t9877 * t9888 +
                        lT * t9873 * t9882 * t9891 * t9874 * t9888 - sS * t9871 * t9873 * t9875 * t9884 * t9897 +
                        sS * t9871 * t9873 * t9875 * t9893 * t9888 - sS * t9870 * t9874 * t9884 * t9877 * t9897 +
                        sS * t9870 * t9874 * t9893 * t9877 * t9888 - sS * t9873 * t9882 * t9891 * t9874 * t9884 * t9897 +
                        sS * t9873 * t9882 * t9891 * t9874 * t9893 * t9888);
  gravity(13, 0) = g * mS *
                       (t9921 + t9922 + t9923 + t9924 + t9925 + t9926 + lT * t9871 * t9882 * t9888 - lT * t9870 * t9873 * t9874 * t9884 +
                        lT * t9871 * t9875 * t9884 * t9877 - lT * t9891 * t9874 * t9875 * t9888 - sS * t9871 * t9882 * t9884 * t9897 +
                        lT * t9882 * t9891 * t9874 * t9884 * t9877 - sS * t9870 * t9873 * t9874 * t9884 * t9893 -
                        sS * t9870 * t9873 * t9874 * t9888 * t9897 - sS * t9891 * t9874 * t9875 * t9893 * t9888) +
                   g * mT *
                       (sT * t9871 * t9882 * t9888 - sT * t9870 * t9873 * t9874 * t9884 + sT * t9871 * t9875 * t9884 * t9877 -
                        sT * t9891 * t9874 * t9875 * t9888 + sT * t9882 * t9891 * t9874 * t9884 * t9877);
  gravity(14, 0) =
      g * mS *
      (t9921 + t9922 + t9923 + t9924 + t9925 + t9926 - sS * t9871 * t9882 * t9884 * t9897 - sS * t9870 * t9873 * t9874 * t9884 * t9893 -
       sS * t9870 * t9873 * t9874 * t9888 * t9897 - sS * t9891 * t9874 * t9875 * t9893 * t9888);
  gravity(15, 0) = -g * mT *
                       (t9927 + t9928 + t9929 + sT * t9870 * t9881 * t9890 * t9874 + sT * t9871 * t9890 * t9875 * t9879 +
                        sT * t9890 * t9882 * t9891 * t9874 * t9879) -
                   g * mH * (sH * t9870 * t9881 * t9874 + sH * t9871 * t9875 * t9879 + sH * t9882 * t9891 * t9874 * t9879) -
                   g * mS *
                       (t9927 + t9928 + t9929 + lT * t9870 * t9881 * t9890 * t9874 + lT * t9871 * t9890 * t9875 * t9879 +
                        lT * t9890 * t9882 * t9891 * t9874 * t9879 + sS * t9870 * t9881 * t9890 * t9874 * t9895 -
                        sS * t9870 * t9881 * t9874 * t9886 * t9899 + sS * t9871 * t9890 * t9875 * t9895 * t9879 -
                        sS * t9871 * t9875 * t9886 * t9879 * t9899 + sS * t9890 * t9882 * t9891 * t9874 * t9895 * t9879 -
                        sS * t9882 * t9891 * t9874 * t9886 * t9879 * t9899);
  gravity(16, 0) = g * mS *
                       (t9930 + t9931 + t9932 + t9933 + t9934 + t9935 + lT * t9871 * t9890 * t9882 - lT * t9890 * t9891 * t9874 * t9875 +
                        lT * t9871 * t9881 * t9875 * t9886 - lT * t9870 * t9874 * t9886 * t9879 - sS * t9871 * t9882 * t9886 * t9899 +
                        lT * t9881 * t9882 * t9891 * t9874 * t9886 - sS * t9890 * t9891 * t9874 * t9875 * t9895 -
                        sS * t9870 * t9890 * t9874 * t9879 * t9899 - sS * t9870 * t9874 * t9886 * t9895 * t9879) +
                   g * mT *
                       (sT * t9871 * t9890 * t9882 - sT * t9890 * t9891 * t9874 * t9875 + sT * t9871 * t9881 * t9875 * t9886 -
                        sT * t9870 * t9874 * t9886 * t9879 + sT * t9881 * t9882 * t9891 * t9874 * t9886);
  gravity(17, 0) =
      g * mS *
      (t9930 + t9931 + t9932 + t9933 + t9934 + t9935 - sS * t9871 * t9882 * t9886 * t9899 - sS * t9890 * t9891 * t9874 * t9875 * t9895 -
       sS * t9870 * t9890 * t9874 * t9879 * t9899 - sS * t9870 * t9874 * t9886 * t9895 * t9879);

  return gravity;
}

} /* namespace internal */
} /* namespace starleth_dynamics */
